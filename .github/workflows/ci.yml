name: CoyIM CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
        
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.15', '1.14', '1.13', '1.12', '1.11' ]
        os: [ ubuntu-16.04, macos-latest ]

        include:
        - os: ubuntu-16.04
          INSTALL_DEPS: sudo apt-get install libgtk-3-dev gettext libglib2.0-dev libc6-dev-i386 xvfb
        - os: macos-latest
          INSTALL_DEPS: brew install gtk+3 adwaita-icon-theme hicolor-icon-theme shared-mime-info gtk-mac-integration create-dmg fileicon

        # We only want to run Golang 1.14 on OS X
        exclude:
        - os: macos-latest
          go: '1.15'
        - os: macos-latest
          go: '1.13'
        - os: macos-latest
          go: '1.12'
        - os: macos-latest
          go: '1.11'

    name: CoyIM go-${{ matrix.go }} test (${{ matrix.os }})
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}        
      - name: install OS dependencies
        run: ${{ matrix.INSTALL_DEPS }}
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: install project dependencies
        run: make -C ci/ deps
        env:
          DISPLAY: ':99.0'
      - name: run tests
        run: make -C ci/
        env:
          DISPLAY: ':99.0'
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

  notify-test:
    name: Notify on success or failure of test
    needs: test
    runs-on: ubuntu-20.04
    if: always() 
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: ./.github/actions/ci-conclusion-message
        id: message-generator
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          commit_id: ${{ github.sha }}
          commit_message: ${{ github.event.head_commit.message }}
      - name: send message to Matrix on conclusion
        uses: olabiniV2/matrix-message@v0.0.1
        with:
          room_id: ${{ secrets.MATRIX_COYIM_ROOM_ID }}
          access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          server: ${{ secrets.MATRIX_SERVER }}
          subject: ${{ steps.message-generator.outputs.subject }}
          message: ${{ steps.message-generator.outputs.message }}

  build-release-linux:
    name: Build Linux release
    needs: test
    runs-on: ubuntu-20.04
    if: startsWith( github.ref, 'refs/tags/')

    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}        
      - uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: build release
        run: make -C ci/ release-gui-linux
      
